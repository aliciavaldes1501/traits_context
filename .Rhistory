)
sem1_b<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer(attack~PC1+veg_h_mean+(1|pop),data=data3,family="binomial"),#Interactions trait*context NS
glmer(cbind(n_intact_fruits,n_fl)~PC1+veg_h_mean+attack+(1|pop),data=data3,family="binomial")
)
sem.fit(sem1,data3)
sem.fit(sem1_a,data3)
sem.fit(sem1_b,data3)
sem.coefs(sem1,data3)
sem1_c<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer(attack~PC1+veg_h_mean+n_redants+(1|pop),data=data3,family="binomial"),#Interactions trait*context NS
glmer(cbind(n_intact_fruits,n_fl)~PC1+attack+(1|pop),data=data3,family="binomial")
)
sem.fit(sem1_c,data3)
sem.fit(sem1,data3)
sem1_c<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer(attack~PC1+veg_h_mean+(1|pop),data=data3,family="binomial"),#Interactions trait*context NS
glmer(cbind(n_intact_fruits,n_fl)~attack+(1|pop),data=data3,family="binomial")
)
sem.fit(sem1_c,data3)
sem1_c<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer(attack~PC1+veg_h_mean+n_redants+(1|pop),data=data3,family="binomial"),#Interactions trait*context NS
glmer(cbind(n_intact_fruits,n_fl)~PC1+attack+(1|pop),data=data3,family="binomial")
)
sem.fit(sem1_c,data3)
sem.fit(sem1,data3)
sem.fit(sem1_a,data3)
sem.fit(sem1_b,data3)
sem.fit(sem1_c,data3)
sem.fit(sem1_a,data3)
sem.fit(sem1_b,data3)
sem.fit(sem1_c,data3)
sem1<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer(attack~PC1+veg_h_mean+n_redants+(1|pop),data=data3,family="binomial"),#Interactions trait*context NS
glmer(cbind(n_intact_fruits,n_fl)~PC1+veg_h_mean+attack+(1|pop),data=data3,family="binomial")
)
sem.fit(sem1,data3)
sem.coefs(sem1,data3)
sem.model.fits(sem1,data3)
sem2<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+veg_h_mean+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+veg_h_mean+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem2,data3)
sem.coefs(sem2,data3)
sem.model.fits(sem2,data3)
sem7<-list(
lmer(PC1~meanT+(1|pop),data=data3),
glmer.nb(n_redants~meanT+(1|pop),data=data3),
glmer(attack~PC1+meanT+n_redants+(1|pop),data=data3,family="binomial"),#Interactions trait*context NS
glmer(cbind(n_intact_fruits,n_fl)~PC1+meanT+attack+(1|pop),data=data3,family="binomial")
)
sem.fit(sem7,data3)
sem.coefs(sem7,data3)
sem.model.fits(sem7,data3)
sem8<-list(
lmer(PC1~meanT+(1|pop),data=data3),
glmer.nb(n_redants~meanT+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+meanT+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+meanT+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem8,data3)
sem.coefs(sem8,data3)
sem.model.fits(sem8,data3)
summary(glmer.nb(n_eggs_max~PC1+meanT+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")))
summary(glmer.nb(n_eggs_max~PC1+meanT+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Bobyqua")))
?glmerControl
summary(glmer.nb(n_eggs_max~PC1+meanT+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="bobyqua")))
summary(glmer.nb(n_eggs_max~PC1+meanT+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="bobyqa")))
sem7<-list(
lmer(PC1~meanT+(1|pop),data=data3),
glmer.nb(n_redants~meanT+(1|pop),data=data3),
glmer(attack~PC1+meanT+n_redants+(1|pop),data=data3,family="binomial"),#Interactions trait*context NS
glmer(cbind(n_intact_fruits,n_fl)~PC1+meanT+attack+(1|pop),data=data3,family="binomial")
)
sem.fit(sem7,data3)
sem.coefs(sem7,data3)
sem.model.fits(sem7,data3)
#SEM n eggs with pop as random and meanT####
sem8<-list(
lmer(PC1~meanT+(1|pop),data=data3),
glmer.nb(n_redants~meanT+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+meanT+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+meanT+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem8,data3)
sem.coefs(sem8,data3)
sem.model.fits(sem8,data3)
citation("lme4")
?glmer.nb
library(lme4)
library(lmerTest)
sem2<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+veg_h_mean+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+veg_h_mean+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem2,data3)
sem.coefs(sem2,data3)
library(piecewiseSEM)
sem2<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+veg_h_mean+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+veg_h_mean+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem2,data3)
sem.coefs(sem2,data3)
sem.fit(sem2_a,data3)
sem2_a<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+veg_h_mean+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem2_a,data3)
sem2_b<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+veg_h_mean+n_redants+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem2_b,data3)
sem2_c<-list(
lmer(PC1~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_redants~veg_h_mean+(1|pop),data=data3),
glmer.nb(n_eggs_max~PC1+veg_h_mean+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")),
glmer(cbind(n_intact_fruits,n_fl)~PC1+veg_h_mean+n_eggs_max+(1|pop),data=subset(data3,n_eggs_max>0),family="binomial")
)
sem.fit(sem2_c,data3)
PCA_traits
summary(PCA_traits)
with(data3,cor(PC!,n_fl))
with(data3,cor(PC1,n_fl))
with(data3,cor(PC1,shoot_h))
with(data3,cor(PC1,phen_index1))
?prcomp
PCA_traits$loadings
str(PCA_traits)
PCA_traits$sdev
PCA_traits$rotation
PCA_traits$center
PCA_traits$scale
PCA_traits$x
PCA_traits$call
PCA_traits
?PCA
??PCA
dudi.pca(b, center = T, scale = T, scan = T)
names(data3)
head(data3[c(21,3,32)])
dudi.pca(data3[c(21,3,32)], center = T, scale = T, scan = T)
library(ade4)
dudi.pca(data3[c(21,3,32)], center = T, scale = T, scan = T)
a<-dudi.pca(data3[c(21,3,32)], center = T, scale = T, scan = T)
a
a$nf
a$cw
a$eig
a$co
a$c1
PCA_traits
plot(a)
biplot(a)
biplot(PCA_traits)
?biplot
biplot(PCA_traits,scale=1)
biplot(PCA_traits,scale=0)
biplot(PCA_traits,pc.biplot=T)
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
library(ggplo)
library(ggplot2)
library(ggthemes)
theme_set( theme_base( base_family= "Times"))
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
a<-dudi.pca(data3[c(21,3,32)], center = T, scale = T, scan = T)
a
a$co
a$c1
PCA_traits
library(MASS)
library(piecewiseSEM)
library(ggplot2)
library(ggfortify)
library(ggthemes)
sem1_H<-list(
lm(PC1~meanT,data=subset(data3,pop=="H")),
glm.nb(n_redants~meanT,data=subset(data3,pop=="H")),
glm(attack~PC1+meanT+n_redants,data=subset(data3,pop=="H"),family="binomial"),#Interactions trait*context NS
glm(cbind(n_intact_fruits,n_fl)~PC1+meanT+attack,family="binomial",data=subset(data3,pop=="H"))
)
sem.fit(sem1_H,subset(data3,pop=="H"))
sem.coefs(sem1_H,subset(data3,pop=="H"))
sem.model.fits(sem1_H,subset(data3,pop=="H"))
sem1_R<-list(
lm(PC1~meanT,data=subset(data3,pop=="R")),
glm.nb(n_redants~meanT,data=subset(data3,pop=="R")),
glm(attack~PC1+meanT+n_redants,data=subset(data3,pop=="R"),family="binomial"),#Interactions trait*context NS
glm(cbind(n_intact_fruits,n_fl)~PC1+meanT+attack,family="binomial",data=subset(data3,pop=="R"))
)
sem.fit(sem1_R,subset(data3,pop=="R"))
sem.coefs(sem1_R,subset(data3,pop=="R")) #attack on fr set NS
sem.model.fits(sem1_R,subset(data3,pop=="R"))
sem1_T<-list(
lm(PC1~meanT,data=subset(data3,pop=="T")),
glm.nb(n_redants~meanT,data=subset(data3,pop=="T")),
glm(attack~PC1+meanT+n_redants,data=subset(data3,pop=="T"),family="binomial"),#Interactions trait*context NS
glm(cbind(n_intact_fruits,n_fl)~PC1+meanT+attack,family="binomial",data=subset(data3,pop=="T"))
)
sem.fit(sem1_T,subset(data3,pop=="T"))
sem.coefs(sem1_T,subset(data3,pop=="T")) #veg on ants and on attack NS
sem.model.fits(sem1_T,subset(data3,pop=="T"))
sem2_H<-list(
lm(PC1~meanT,data=subset(data3,pop=="H")),
glm.nb(n_redants~meanT,data=subset(data3,pop=="H")),
glm.nb(n_eggs_max~PC1+meanT+n_redants,data=subset(data3,pop=="H"&n_eggs_max>0)),
glm(cbind(n_intact_fruits,n_fl)~PC1+meanT+n_eggs_max,family="binomial",data=subset(data3,pop=="H"&n_eggs_max>0))
)
sem.fit(sem2_H,subset(data3,pop=="H"))
sem.coefs(sem2_H,subset(data3,pop=="H"))
sem.model.fits(sem2_H,subset(data3,pop=="H"))
sem2_R<-list(
lm(PC1~meanT,data=subset(data3,pop=="R")),
glm.nb(n_redants~meanT,data=subset(data3,pop=="R")),
glm.nb(n_eggs_max~PC1+meanT+n_redants,data=subset(data3,pop=="R"&n_eggs_max>0)),
glm(cbind(n_intact_fruits,n_fl)~PC1+meanT+n_eggs_max,family="binomial",data=subset(data3,pop=="R"&n_eggs_max>0))
)
sem.fit(sem2_R,subset(data3,pop=="R"))
sem.coefs(sem2_R,subset(data3,pop=="R"))
sem.model.fits(sem2_R,subset(data3,pop=="R"))
sem2_T<-list(
lm(PC1~meanT,data=subset(data3,pop=="T")),
glm.nb(n_redants~meanT,data=subset(data3,pop=="T")),
glm.nb(n_eggs_max~PC1+meanT+n_redants,data=subset(data3,pop=="T"&n_eggs_max>0)),
glm(cbind(n_intact_fruits,n_fl)~PC1+meanT+n_eggs_max,family="binomial",data=subset(data3,pop=="T"&n_eggs_max>0))
)
sem.fit(sem2_T,subset(data3,pop=="T"))
sem.coefs(sem2_T,subset(data3,pop=="T"))
sem.model.fits(sem2_T,subset(data3,pop=="T"))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,aes(color = population,fill=population))+
geom_point(size = 1,aes(color=population))+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,aes(color = population,fill=population))+
geom_point(size = 1,aes(color=population))+theme_base()+ylab(NULL)+theme(axis.text.y = element_blank())+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(subset(data3,n_eggs_max>0), aes(PC1,n_eggs_max))+
geom_smooth(method = "glm.nb", se = F,fullrange=T,size=1,aes(color = population,fill=population))+
geom_point(size = 1,aes(color=population))+theme_base()+ylab("Number of eggs")+
xlab("Traits PC1")+theme(plot.background=element_rect(fill="white", colour=NA))+
theme(strip.text.x = element_text(colour="white"),strip.background = element_rect(fill="white"))+
theme(legend.position="none")
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1)+
geom_point(size = 1,aes(color=population))+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1)+
geom_point(size = 1,aes(color=black))+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1)+
geom_point(size = 1,aes(color="black"))+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,aes(color="black"))+
geom_point(size = 1,aes(color="black"))+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,aes(color="black"))+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab(NULL)+theme(axis.text.y = element_blank())+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(subset(data3,n_eggs_max>0), aes(PC1,n_eggs_max))+
geom_smooth(method = "glm.nb", se = F,fullrange=T,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Number of eggs")+
xlab("Traits PC1")+theme(plot.background=element_rect(fill="white", colour=NA))+
theme(strip.text.x = element_text(colour="white"),strip.background = element_rect(fill="white"))+
theme(legend.position="none")
theme_set( theme_base( base_family= "Times"))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab(NULL)+theme(axis.text.y = element_blank())+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(subset(data3,n_eggs_max>0), aes(PC1,n_eggs_max))+
geom_smooth(method = "glm.nb", se = F,fullrange=T,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Number of eggs")+
xlab("Traits PC1")+theme(plot.background=element_rect(fill="white", colour=NA))+
theme(strip.text.x = element_text(colour="white"),strip.background = element_rect(fill="white"))+
theme(legend.position="none")
library(ggthemes)
theme_set( theme_base( base_family= "Times"))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab(NULL)+theme(axis.text.y = element_blank())+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(subset(data3,n_eggs_max>0), aes(PC1,n_eggs_max))+
geom_smooth(method = "glm.nb", se = F,fullrange=T,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Number of eggs")+
xlab("Traits PC1")+theme(plot.background=element_rect(fill="white", colour=NA))+
theme(strip.text.x = element_text(colour="white"),strip.background = element_rect(fill="white"))+
theme(legend.position="none")
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+theme(axis.text.y = element_blank())+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(PC1,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+
xlab("Traits PC1")+  theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Probability of having eggs")+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(subset(data3,n_eggs_max>0), aes(PC1,n_eggs_max))+
geom_smooth(method = "glm.nb", se = F,fullrange=T,size=1,color="black")+
geom_point(size = 1,color="black")+theme_base()+ylab("Number of eggs")+
xlab("Traits PC1")+theme(plot.background=element_rect(fill="white", colour=NA))+
theme(strip.text.x = element_text(colour="white"),strip.background = element_rect(fill="white"))+
theme(legend.position="none")
ggplot(data3, aes(veg_h_mean,as.integer(data3$attack)))+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F,size=1,color="black")+
geom_point(size = 1,color="black",pch=19)+theme_base()+ylab("Probability of having eggs")+
xlab("Vegetation height (cm)")+theme(legend.position="none")+
theme(plot.background=element_rect(fill="white", colour=NA))
summary(glmer(attack~PC1+PC2+(1|pop),data=data3,family="binomial"))
summary(glmer.nb(n_eggs_max~PC1+PC2+(1|pop),data=subset(data3,n_eggs_max>0),control=glmerControl(optimizer="Nelder_Mead")))
biplot(PCA_traits)
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
library(MASS)
library(piecewiseSEM)
library(ggplot2)
library(ggfortify)
library(ggthemes)
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
theme_set( theme_base( base_family= "Times"))
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = F, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
warnings()
autoplot(PCA_traits, loadings = FALSE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = FALSE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed",scale=0)
?autoplot
autoplot(PCA_traits)
autoplot(PCA_traits,scale=0)
autoplot(PCA_traits,scale=0)
autoplot(PCA_traits)
autoplot(PCA_traits, scale=0,loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = TRUE, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, scale=0,loadings = F, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = F, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
autoplot(PCA_traits, loadings = T, loadings.colour = "black", loadings.label = TRUE,loadings.label.colour="black",
loadings.label.label = c("Phenology","Shoot h","N flowers"), colour="grey",data = data3)+
xlab("PC1 (64.5%)")+ylab("PC2 (24.5%)")+geom_hline(aes(yintercept=0), colour="darkgrey",linetype="dashed")+
geom_vline(aes(xintercept=0), colour="darkgrey",linetype="dashed")
library(ade4)
?dudi.pca
names(data3)
head(data3[c·3,21,32])
head(data3[c(3,21,32)])
PCA_traits_dudi <- dudi.pca(data3[c(3,21,32)], scann = T)
names(PCA_traits_dudi)
PCA_traits_dudi
plot(PCA_traits_dudi)
biplot(PCA_traits_dudi)
?s.corcircle
s.corcircle(PCA_traits_dudi$co)
?fviz_pca_var
library("FactoMineR")
PCA_traits_fm <- PCA(data3[c(3,21,32)], graph = T)
fviz_pca_var(PCA_traits_fm, col.var = "black")
install.packages("factoextra")
library(factoextra)
fviz_pca_var(PCA_traits_fm, col.var = "black")
fviz_pca_var(PCA_traits, col.var = "black")
PCA_traits_fm
PCA_traits_fm$var$cor
?fviz_pca_var
s.corcircle(PCA_traits_dudi$co)
fviz_pca_var(PCA_traits, col.var = "black")
fviz_pca_ind(PCA_traits)
fviz_pca_ind(PCA_traits, label = NULL)
fviz_pca_var(PCA_traits, col.var = "black")
fviz_pca_ind(PCA_traits)
s.corcircle(PCA_traits_dudi$co)
fviz_pca_var(PCA_traits, col.var = "black")
fviz_pca_var(PCA_traits, col.var = "black")
fviz_pca_ind(PCA_traits)
s.corcircle(PCA_traits_dudi$co)
?s.corcircle
summary(PCA_traits)
PCA_traits
PCA_traits_dudi
str(PCA_traits_dudi)
PCA_traits_dudi$eig
PCA_traits_dudi <- dudi.pca(data3[c(3,21,32)], scann = T)
library(MASS)
library(piecewiseSEM)
library(ggplot2)
library(ggfortify)
library(ggthemes)
library(ade4)
library("FactoMineR")
library(factoextra)
PCA_traits_dudi <- dudi.pca(data3[c(3,21,32)], scann = T)
PCA_traits_dudi$eig
?dudi.pca
biplot(PCA_traits_dudi)
plot(PCA_traits_dudi)
View(dataseeds1)
